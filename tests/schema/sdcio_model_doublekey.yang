module sdcio_model_doublekey {
  yang-version 1.1;
  namespace "urn:sdcio/model_doublekey";
  prefix sdcio_model_doublekey;

  //   import sdcio_model_common {
  //   prefix sdcio_model_common;
  // }


  description
    "This is part of the test schema for sdcio";

  revision 2024-06-03 {
    description
      "Test schema first attempt";
  }

    grouping doublekey-top {
      list doublekey {
        description
          "here we have a container with two keys";
        key "key1 key2";

        leaf key1 {
         type string;
        }
        leaf key2 {
          type string;
        }
        leaf mandato {
          type string;
          mandatory true;
        }
        container cont {
          description "just a simple container under a double keyed item";
          leaf value1 {
            type string;
          }
          leaf value2 {
            type string;
          }
        }

        // choice choicecase {
        //   container case1 {
        //     presence "case1 is active";
        //     description
        //       "case 1 of the choicecase";
        //     leaf log {
        //       type boolean;
        //       default "false";
        //       description "When this is true, a log is created for each packet matching the entry";
        //     }
        //     container case-elem {
        //       leaf elem {
        //         type string;
        //         description "some element under the case";
        //       }
        //     }
        //   }
        //   container case2 {
        //     presence "case1 is active";
        //     description
        //       "case 1 of the choicecase";
        //     leaf log {
        //       type boolean;
        //       default "false";
        //       description "When this is true, a log is created for each packet matching the entry";
        //     }
        //   }
        // }
      }
    }
}